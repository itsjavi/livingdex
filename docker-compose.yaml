version: "3"
volumes:
  mysql-data: ~
services:
  mysql:
    image: mysql:8.0
    restart: on-failure
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
    ports:
      - '${MYSQL_PORT}:3306'
    volumes:
      - "mysql-data:/var/lib/mysql"
    environment:
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}

  adminer:
    image: adminer
    restart: on-failure
    ports:
      - '${ADMINER_PORT}:8080'

  nginx:
    image: nginx:1.19-alpine
    restart: on-failure
    volumes:
      - './:/usr/src/project'
      - './resources/docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro'
    ports:
      - '${NGINX_PORT}:80'
    depends_on:
      - phpfpm

  data-generator:
    build:
      context: .
      target: node-php8-imagemagick
    command: [ 'true' ]
    working_dir: /usr/src/app
    environment:
      - APP_DIR=/usr/src/app
      - SOURCES_DIR=/usr/shared/sources
      - RESOURCES_DIR=/usr/shared/resources
      - DIST_DIR=/usr/shared/dist
    env_file:
      - .env
    restart: on-failure
    volumes:
      - './apps/db:/usr/src/app'
      - './dist:/usr/shared/dist'
      - './resources:/usr/shared/resources:ro'
      - './.sources:/usr/shared/sources:ro'

  phpfpm:
    build:
      context: .
      target: node-php8-imagemagick
    environment:
      - APPS_DIR=/usr/src/project/apps
      - SOURCES_DIR=/usr/src/project/.sources
      - RESOURCES_DIR=/usr/src/project/resources
      - DIST_DIR=/usr/src/project/dist
    env_file:
      - .env
    restart: on-failure
    volumes:
      - './:/usr/src/project'
      - '~/.composer:/root/.config/composer'  # required to install private packages and use your auth.json in the container
      - '~/.ssh:/root/.ssh'                   # required to clone private repositories

  ui:
    build:
      context: .
      target: node
    command: [ 'npm', 'start' ]
    restart: on-failure
    environment:
      - DIST_DIR=/usr/shared/dist
    volumes:
      - './apps/ui:/usr/src/app'
      - './dist:/usr/shared/dist:ro'
    ports:
      - "3000:3000"

  pogo-dumper:
    build:
      context: .
      target: python
    command: [ 'true' ]
    environment:
      - DATA_DIR=/usr/shared/data
    restart: on-failure
    volumes:
      - './apps/pogo-dumper:/usr/src/app'
      - './dist/json/go:/usr/shared/data'

  spritesheet-generator:
    build:
      context: .
      target: php8-imagemagick
    command: [ 'true' ]
    environment:
      - SOURCES_DIR=/usr/shared/sources
      - RESOURCES_DIR=/usr/shared/resources
      - DIST_DIR=/usr/shared/dist
      - SPRITESHEETS_DIR=/usr/shared/ui-public/assets/spritesheets/pokemon
      - HOME_IMG_DIR=/usr/shared/sources/livingdex-renders/images/pokemon
      - POKESPRITE_IMG_DIR=/usr/shared/sources/msikma-pokesprite/pokemon-gen8
      - POKEMON_JSON_FILE=/usr/shared/dist/json/gen/8/pokemon-forms.json
    restart: on-failure
    volumes:
      - './apps/spritesheet-generator:/usr/src/app'
      - './apps/ui/public:/usr/shared/ui-public'
      - './.sources:/usr/shared/sources:ro'
      - './dist:/usr/shared/dist:ro'
      - './resources:/usr/shared/resources:ro'
